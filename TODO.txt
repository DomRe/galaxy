- implement serialization
- need to document all classes aswell
- profile code for lags https://docs.microsoft.com/en-us/visualstudio/profiling/beginners-guide-to-cpu-sampling
- fix up and rewrite sandbox to test all parts of engine
- static code analysis
- review all compilation warnings
- debug tools - log, console (component / script editor??? -> create entity and add components functionality?
- integrate lua better
	https://sol2.readthedocs.io/en/latest/api/usertype.html
	https://sol2.readthedocs.io/en/latest/tutorial/cxx-in-lua.html
	https://sol2.readthedocs.io/en/latest/tutorial/functions.html
	- allow for creating entities in lua.
	- even assigning components!

- fix category headers for v1.0.
- let debug menu load different levels
- entity creation scripts need to be generic
	- how many entitys to create of each type from each script
	- i.e. scripts are basicically templates for entity creation 
	- reemove concepts of unique entityys

- travis-ci / osx / linux builds
- ensure relevant classes are marked final noexcept
- improved documentation
- string view
- fix update method registry view iteration - in progress
- text loading from tmx maps
- review how entities are being stored - remove any of this - in progress
- further split logging into debug and release modes.
- optimise code
- discovered a weird bug where entt is destroying my physics objects

saving to a zip:
when program is running, get a list of temporarty files to save to zip.
launch zip app, then close main app, then zip app loads all temp files,
stores them in zip and saves everything
then deletes temp files.
https://msdn.microsoft.com/en-us/library/windows/desktop/ms682512(v=vs.85).aspx


entity system -> any entity out of view should be disabled then reenabled if inside.
sounds good ya?
https://github.com/skypjack/entt/issues/69