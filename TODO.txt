SUPERCLUSTER:
- physics tools (rigidbody tools).
- documentation
- on window focus (for viewport)
	- reload tile map from disk
- expose more to lua
- scene graph
	- entity heirachy
- during editor/game switch have some kind of prompt since loading may take awhile
- hotkeys

TODO:
- C# Scripting using Mono and Monodevelop/VSCode.
- Fix CA and Compilation Warnings.
- Docs error fix.
- Dependencies should only abstract away system specific implementations.
- Loading state support?
	- Initial loading screen after window service is created, before other services.
- AI
- Add loaded/created flags for objects that use that model. i.e. sprite/texture/etc.
	- Log if u try without them.
- create component dependencies system where if a component is added the system checks if it is compatible/has right deps then ignores/adds.
	- component default data should safely create a component, no crash.
- further rendersystem improvements
convert type classes to enums (log, vertexs, etc...).
- fix audio encapsulation / scene integration
	- since its threaded
- async log
- z ordering in spritebatches / in general / rendersystem / etc
- texture tooltip
- for scene push/pop run lua script?
- particle gen
- custom textureatlas data preserved when reloading.
- fix map reloading.
- fix texture atlas crashing with GALAXY_FATAL 
- cache camera between shaders

EXPORTING:
- Supercluster is the game with an extra layer.
- will need to export custom main and game layer.
- Engine will export a custom gamelayer and main.cpp along with a cmakelists file to build the game.
- that way supercluster will strip out the editorlayer when compiling.
- supercluster is just the game with an editor layer.
- strip out when exporting.
	/*
	void Project::export_game()
	{
		// NEEDS TO BE CONSTEXPR or CONSTINIT.
		std::string m_cmake_path;
		std::string m_cmake_code;
		std::string m_main_code;
	}
	*/

TODO:
- Model Loader needs to support texture coords outside of [0, 1].
- Model loader needs to determine to use height or normals for assimp normal maps.
- Fix bugs in hot reload system.
- Fix ansio and filtering (again).
- Update unit tests, sandbox tests and script support for new content.
- Add option for World::OPerate() to be run in parallell. Only contents of lambda is parallell.
- Reflection Mapping https://learnopengl.com/Advanced-OpenGL/Cubemaps
	- Environment Mapping 
		- Reflection
		- Refraction
- Geometry Shading https://learnopengl.com/Advanced-OpenGL/Geometry-Shader
- Instancing (particles) https://learnopengl.com/Advanced-OpenGL/Instancing
	- Instance Rendering for 3D
- Shadows https://learnopengl.com/Advanced-Lighting/Shadows/Shadow-Mapping
- Fix usage of GL_DYNAMIC_DRAW vs GL_STATIC_DRAW
- BLOOM https://learnopengl.com/Advanced-Lighting/Bloom
- HDR https://learnopengl.com/Advanced-Lighting/HDR