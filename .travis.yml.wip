language: cpp
sudo: required
dist: xenial

services:
  - docker

git:
  depth: false

branches:
  only:
  - master

notifications:
  email:
    on_success: never
    on_failure: always

matrix:
  include:
    os: osx
    osx_image: xcode10.1
    compiler: clang
    env: CXXCOMPILER=clang++
    os: linux
    compiler: gcc
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-8
    env: 
      - CCCOMPILER=gcc-8
      - CXXCOMPILER=g++-8
#    os: linux
#    compiler: clang
#    addons:
#      apt:
#        sources:
#          - llvm-toolchain-7
#        packages:
#          - clang-7
#    env: COMPILER=clang++-7.0

before_install:
  - export CC=${CCCOMPILER}
  - export CXX=${CXXCOMPILER}
  - if [ $TRAVIS_OS_NAME == linux ]; then docker pull ubuntu:18.04; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then docker run --name travis-ci -v $TRAVIS_BUILD_DIR:/reworks/starlight -td ubuntu:18.04 /bin/bash; fi

install:
  - if [ $TRAVIS_OS_NAME == linux ]; then docker exec -ti travis-ci bash -c "sudo apt-get update"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then docker exec -ti travis-ci bash -c "sudo apt-get install -y git build-essential clang-6.0 g++-8 libxml2 libxml2-dev liballegro5.2 liballegro5-dev curl"; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update && brew install allegro && brew install libxml2 && brew install curl; fi

before_script:
  - if [ $TRAVIS_OS_NAME == linux ]; then docker exec -ti travis-ci bash -c "git clone --recursive --branch=master https://github.com/reworks/starlight.git"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then docker exec -ti travis-ci bash -c "curl -L -o premake5.tar.gz https://github.com/premake/premake-core/releases/download/v5.0.0-alpha13/premake-5.0.0-alpha13-linux.tar.gz"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then docker exec -ti travis-ci bash -c "tar -xvzf premake5.tar.gz"; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then curl -L -o premake5.tar.gz https://github.com/premake/premake-core/releases/download/v5.0.0-alpha13/premake-5.0.0-alpha13-macosx.tar.gz; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then tar -xvzf premake5.tar.gz; fi

script:
  - if [ $TRAVIS_OS_NAME == linux ]; then docker exec -ti travis-ci bash -c "./premake5 --cc=gcc --os=linux --file=./premake5.lua --verbose gmake"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then docker exec -ti travis-ci bash -c "make config=debug_linux64 all"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then docker exec -ti travis-ci bash -c "make config=release_linux64 all"; fi

  # needs to build xcode files
  #- if [ $TRAVIS_OS_NAME == osx ]; then ./premake5 --cc=clang --os=macosx --file=./premake5.lua --verbose gmake; fi
  #- if [ $TRAVIS_OS_NAME == osx ]; then make config=debug_macosx64 all; fi
  #- if [ $TRAVIS_OS_NAME == osx ]; then make config=release_macosx64 all; fi

after_success:
  - if [ $TRAVIS_OS_NAME == linux ]; then docker stop travis-ci; fi