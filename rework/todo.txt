- allegro
- focus on RTTI
- clean up C++ code
- better documentation
- update copyrights
- includes
- better exceptions and logging
- https://wiki.allegro.cc/index.php?title=Achieving_Resolution_Independence
- const / constexpr
- excess copying

- quadtree bounds are level
- "collison rect" is rect that is camera
- only get entitys that are inside or border the "camera"

- look extensively into boost (such as logging...)
- atlas idea: https://github.com/Nooskewl/crystal-picnic/blob/master/src/atlas.cpp
- docs / readthedocs -> repo wiki / repo website / repo settings
- add systems to applciation
- may need to reposition allegro window //al_set_new_window_position(x, y);

https://github.com/alecthomas/entityx/blob/master/README.md
https://github.com/alecthomas/entityx/blob/master/examples/example.cc

renderer:
- only draw stuff that is in view - think quadtree
- spritecomponent should rely on texture atlas -> 
- each srpiute compnent has rectangle and z layering
- each text component should draw text to bitmap -> then atlas...
- use atlas drawing for performance :3

atlas =
{
	menubg = 
	{
		x = 0, 
		y = 0,
		w = 1280,
		h = 720
	},
}

done modules:

components:
	- physics
	- collision
	- transform

core:
	- world (kinda)

graphics:
	- texturepacker
	- window

libs:
	- n/a

managers:
	- box2dmanager
	- fontmanager
	- statemanager

math:
	- quadtree
	- random
	- rect
	- vector2
	- vector3

physics:
	- box2dhelper

platform:
	- consolecolour
	- unixlog
	- win32log

scripting:
	- luautils

services:
	- Config
	- ServiceLocator
	- VFS

systems:
	-

types:
	- Service
	- State

utility:
	- Log
	- Time
	- Utils









http://liballeg.org/a5docs/trunk/display.html
https://www.youtube.com/watch?v=NAFK0WOArZA&index=4&list=PL6B459AAE1642C8B4
https://readthedocs.org/
https://www.stack.nl/~dimitri/doxygen/download.html